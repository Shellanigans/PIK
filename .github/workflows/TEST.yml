# This is a basic workflow to help you get started with Actions

name: TEST

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  GUI:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Runs a set of commands using the runners shell
      - name: GUI_TEST
        run: |
          echo "Add-Type -AssemblyName System.Windows.Forms" > TestFile.ps1
          echo "Add-Type -AssemblyName System.Drawing" >> TestFile.ps1
          echo "`$Bounds = [System.Drawing.Rectangle]::New(0,0,[System.Windows.Forms.Screen]::PrimaryScreen.Width,[System.Windows.Forms.Screen]::PrimaryScreen.Height)" >> TestFile.ps1
          echo "`$BMP = [System.Drawing.Bitmap]::New([Int]`$Bounds.Width,[Int]`$Bounds.Height)" >> TestFile.ps1
          echo "`$Graphics = [System.Drawing.Graphics]::FromIMage(`$BMP)" >> TestFile.ps1
          echo "`$Graphics.CopyFromScreen(`$Bounds.Location,[System.Drawing.Point]::Empty,`$Bounds.Size)" >> TestFile.ps1
          echo "`$BMP.Save('Test.bmp')" >> TestFile.ps1
          echo "Write-Host (([System.IO.File]::ReadAllBytes('Test.bmp') | %{[String]`$_}) -join ',')" >> TestFile.ps1
          powershell -c "& {[ScriptBlock]::Create((GC -RAW TestFile.ps1)).Invoke()}"
          
