# This is a basic workflow to help you get started with Actions

name: TEST

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  #push:
  #  branches: [ master ]
  #pull_request:
  #  branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  GUI:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Runs a set of commands using the runners shell
      - name: GUI_TEST
        run: |
          systeminfo
          '
          Add-Type -AssemblyName System.Windows.Forms
          Add-Type -AssemblyName System.Drawing
          $form = New-Object system.Windows.Forms.Form
          $Form.Show()
          saps explorer.exe
          $Bounds = New-Object System.Drawing.Rectangle -ArgumentList @(0,0,[System.Windows.Forms.Screen]::PrimaryScreen.Width,[System.Windows.Forms.Screen]::PrimaryScreen.Height)
          #Write-Host ([System.Drawing.Bitmap]::New | Out-String)
          $BMP = New-Object System.Drawing.Bitmap -argumentlist @(1280,768)
          $Graphics = [System.Drawing.Graphics]::FromIMage($BMP)
          $Graphics.CopyFromScreen($Bounds.Location,[System.Drawing.Point]::Empty,$Bounds.Size)
          $BMP.Save("Test.bmp")
          Write-Host (([System.IO.File]::ReadAllBytes("Test.bmp") | %{[String]$_}) -join ",")
          $psversiontable
          ps
          ipconfig /all
          ls
          ls C:\
          GC -ReadCount 0 C:\InstalledSoftware.md | Out-String
          ls C:\Users
          ls C:\Windows\system32\
          ' | Out-file test.ps1
          powershell -v 2 -c "& {[ScriptBlock]::Create((GC -ReadCount 0 test.ps1 | Out-String)).Invoke()}"
